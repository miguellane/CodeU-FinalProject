Ideas:
	Generate Searches as Results Appear (10 pages at a time perhaps)
	Ignore Insig. Keyword

	Operator "IFL:" I'm Feeling Lucky Implementation
	Operator "Site:" URL Filter
	Joke: "Cringe: Apple" Results of "Apple" in Comic Sans

	+ Jar Application (Need to edit jedismaker)
	Condense files
////////////////////////////////////////////////////////////////////////////////////////////////////
////////// General Parts


	Retriever	- Retrieves Info from Database and Submits
        Crawler		- Crawls URLs for Info
	Indexer		- Indexes Pages into Database
	Page Parse	- JSoup Reads a Page and Returns as Structure
		

         Admin <==> //Crawler// <-->  //Indexer//

				           |
				           v
User <==> //Run// <==> //Retriever// <-- \\DB\\

////////////////////////////////////////////////////////////////////////////////////////////////////
////////// Run

	Proposed methods: AND, OR, -, IFL:, SITE:
	Rejected method: jOpt-Simple

////////////////////////////////////////////////////////////////////////////////////////////////////
////////// Retriever

	Input: 	String Line & Call to Java
	Call:	Database for Information
	Output:	Printed List of URLs by Relevance
	Added method: Heapsort
	Proposed method: TF-IDF
	Proposed method: Print of Results as Retrieved (Seperate Heapsorts into Restricted Heapsorts, Print Results 10 at a Time)

////////////////////////////////////////////////////////////////////////////////////////////////////
////////// Indexer

	Input:	URL
	Call:	Database for Storage
	Output:	Database Entry
	Proposed method: MySQL Database Usage
	Proposed method: Switchability between External / Internal Database

	HashMap: "Term - URL - Count"

////////////////////////////////////////////////////////////////////////////////////////////////////
////////// Page Parser

	Input:	Url
	Output:	Object of Parsed Data
